{"version":3,"sources":["../../src/datasource.js"],"names":["PredixTimeSeriesDatasource","instanceSettings","$q","backendSrv","$timeout","$http","templateSrv","type","url","name","q","http","uaaTokenCache","tsURL","jsonData","predixZoneId","uaacURL","clientData","uaacType","uaacGrantType","uaac_origin","expand","console","log","fetchToken","then","datasourceRequest","data","method","headers","uaacToken","response","mapToTextValue","results","metricName","query","JSON","stringify","result","Object","keys","tags","attributes","attributeName","each","elem","push","mapToTextAndType","map","d","i","text","expandable","options","targets","filter","target","aQuery","deferred","defer","request","fullQuery","tag","tagName","targetAlias","length","a_metric","datapoints","values","timeseries","newseries","resolve","error","promise","reject","now","Date","checkTime","getTime","uaacTokenType","expiresDTTM","clientID","split","clientSecret","payload","encodeURI","btoa","access_token","token_type","uaacExpires","expires_in","timeObject","aToken","getUAAToken","pendingQueries","predixTSCalls","forEach","SinglePredixTimeSeriesQuery","all","errors","updates","update","queries","when","metric","hide","limit","maxDataPoints","start","range","from","valueOf","end","to","undefined","attribute","value","filters","alias","predixQueries","first","MultiplePredixTimeSeriesQueries","status","message","title"],"mappings":"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","file":"datasource.js","sourcesContent":["import angular from \"angular\";\nimport _ from \"lodash\";\nimport dateMath from \"app/core/utils/datemath\";\nimport kbn from \"app/core/utils/kbn\";\n\nexport class PredixTimeSeriesDatasource {\n\n    constructor(instanceSettings, $q, backendSrv, $timeout, $http, templateSrv) {\n        this.type = instanceSettings.type;\n        this.url = instanceSettings.url;\n        this.name = instanceSettings.name;\n        this.q = $q;\n        this.http = $http;\n        this.backendSrv = backendSrv;\n        this.templateSrv = templateSrv;\n        // the uaa token is stored here in the model\n        this.uaaTokenCache = [];\n        // these attributes are pulled from the datasource definition ui\n        this.tsURL = instanceSettings.jsonData.tsURL;\n        this.predixZoneId = instanceSettings.jsonData.predixZoneId;\n        this.uaacURL = instanceSettings.jsonData.uaacURL;\n        this.clientData = instanceSettings.jsonData.clientData;\n        this.uaacType = instanceSettings.jsonData.uaacType;\n        this.uaacGrantType = instanceSettings.jsonData.uaacGrantType;\n        this.uaac_origin = instanceSettings.jsonData.uaac_origin;\n        this.expand = true;\n        console.log(\"predix time series datasource constructor finished\");\n    }\n\n    // Required for hints\n    getMetrics() {\n        return this.fetchToken().then(() => {\n            return this.backendSrv.datasourceRequest({\n                url: this.tsURL + '/v1/tags',\n                data: '',\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': 'Bearer ' + this.uaaTokenCache.uaacToken,\n                    'Predix-Zone-Id': this.predixZoneId,\n                    'Access-Control-Allow-Origin': this.uaac_origin\n                }\n            }).then((response) => {\n                return this.mapToTextValue(response.data.results);\n            });\n        });\n    }\n\n    getAttributesForMetric(metricName) {\n\n        return this.fetchToken().then(() => {\n            var query = {\n                \"start\": \"1d-ago\",\n                \"end\": \"1s-ago\",\n                \"tags\": [{\n                    \"name\": [metricName]\n                }]\n            };\n            return this.backendSrv.datasourceRequest({\n                url: this.tsURL + '/v1/datapoints',\n                data: JSON.stringify(query),\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': 'Bearer ' + this.uaaTokenCache.uaacToken,\n                    'Predix-Zone-Id': this.predixZoneId,\n                    'Access-Control-Allow-Origin': this.uaac_origin\n                }\n            }).then((result) => {\n                return this.mapToTextValue(Object.keys(result.data.tags[0].results[0].attributes));\n            });\n        });\n    }\n\n    getAttributeValues(metricName, attributeName) {\n        return this.fetchToken().then(() => {\n            var query = {\n                \"start\": \"1d-ago\",\n                \"end\": \"1s-ago\",\n                \"tags\": [{\n                    \"name\": [metricName]\n                }]\n            };\n            return this.backendSrv.datasourceRequest({\n                url: this.tsURL + '/v1/datapoints',\n                data: JSON.stringify(query),\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': 'Bearer ' + this.uaaTokenCache.uaacToken,\n                    'Predix-Zone-Id': this.predixZoneId,\n                    'Access-Control-Allow-Origin': this.uaac_origin\n                }\n            }).then((result) => {\n                return this.mapToTextValue(result.data.tags[0].results[0].attributes[attributeName]);\n            });\n        });\n    }\n\n    getAggregations() {\n        return this.fetchToken().then(() => {\n            return this.backendSrv.datasourceRequest({\n                url: this.tsURL + '/v1/aggregations',\n                data: '',\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': 'Bearer ' + this.uaaTokenCache.uaacToken,\n                    'Predix-Zone-Id': this.predixZoneId,\n                    'Access-Control-Allow-Origin': this.uaac_origin\n                }\n            }).then((response) => {\n                var data = [];\n                _.each(response.data.results, (elem) => {\n                    data.push({\n                        name: elem.type,\n                        type: elem.name\n                    });\n                });\n                return this.mapToTextAndType(data);\n            });\n        });\n    }\n\n    mapToTextValue(results) {\n        return _.map(results, (d, i) => {\n            return {\n                text: d,\n                expandable: true\n            };\n        });\n    }\n\n    mapToTextAndType(result) {\n        return _.map(result, function (d, i) {\n            return {\n                text: d.name,\n                expandable: false,\n                type: d.type\n            };\n        });\n    }\n\n    buildQueryParameters(options) {\n        //remove placeholder targets\n        options.targets = _.filter(options.targets, function (target) {\n            return target.target !== 'select metric';\n        });\n        return options;\n    }\n\n    // Since we are limited on the amount of data that can be returned,\n    // each metric gets its own query for maximum results\n    SinglePredixTimeSeriesQuery(aQuery) {\n        var deferred = this.q.defer();\n        var request = this.backendSrv.datasourceRequest({\n            url: this.tsURL + '/v1/datapoints',\n            data: JSON.stringify(aQuery.fullQuery),\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + this.uaaTokenCache.uaacToken,\n                'Predix-Zone-Id': this.predixZoneId,\n                'Access-Control-Allow-Origin': this.uaac_origin\n            }\n        }).then(function (result) {\n            // we always get one tag back\n            var tag = result.data.tags[0];\n            var tagName = tag.name;\n            if ((typeof aQuery.targetAlias !== 'undefined') && (aQuery.targetAlias.length > 0)) {\n                tagName = aQuery.targetAlias;\n            }\n            // construct the response\n            var a_metric = {\n                target: tagName,\n                datapoints: []\n            };\n            // add in the datapoints, picking the correct fields\n            // predix has a \"quality\" field that is ignored\n            _.each(tag.results[0].values, function (timeseries) {\n                var newseries = [timeseries[1], timeseries[0]];\n                a_metric.datapoints.push(newseries);\n            });\n            return a_metric;\n        })\n            .then(function (response) {\n                deferred.resolve(response);\n            }, function (error) {\n                console.error(error);\n            });\n        return deferred.promise;\n    }\n\n\n    getUAAToken() {\n        return this.q((resolve, reject) => {\n            var now = new Date();\n            var checkTime = new Date(now.getTime() + 1000 * 30);\n            if (typeof this.uaaTokenCache.uaacTokenType === 'undefined' ||\n                (typeof this.uaaTokenCache.expiresDTTM !== 'undefined' &&\n                    this.uaaTokenCache.expiresDTTM < checkTime)) {\n                var clientID = this.clientData.split(\":\")[0];\n                var clientSecret = this.clientData.split(\":\")[1];\n                var payload = encodeURI(\"client_id=\" + clientID +\n                    \"&client_secret=\" + clientSecret +\n                    \"&response_type=token&grant_type=client_credentials\");\n                this.backendSrv.datasourceRequest({\n                    method: 'POST',\n                    url: this.uaacURL,\n                    headers: {\n                        'Content-Type': 'application/x-www-form-urlencoded',\n                        'Authorization': 'Basic ' + btoa(this.clientData),\n                    },\n                    data: payload\n                }).then(\n                    (response) => {\n                        this.uaaTokenCache = [];\n                        this.uaaTokenCache.uaacToken = response.data.access_token;\n                        this.uaaTokenCache.uaacTokenType = response.data.token_type;\n                        this.uaaTokenCache.uaacExpires = response.data.expires_in;\n                        var timeObject = new Date();\n                        //set the time and date that this token expires\n                        timeObject = new Date(timeObject.getTime() + 1000 * response.data.expires_in);\n                        this.uaaTokenCache.expiresDTTM = timeObject;\n                        // console.log(\"Got a new token!\");\n                        // console.log($scope.datasource.uaaTokenCache);\n                        resolve(this.uaaTokenCache);\n                    },\n                    (error) => {\n                        console.log(\"Failed to get a token: \" + error);\n                        resolve(\"error\");\n                    });\n            } else {\n                // console.log(\"we have a good token...\");\n                resolve(this.uaaTokenCache);\n            }\n        });\n    }\n\n    fetchToken() {\n\n\n        // TODO: check if we already have a token and the expiration time is good\n        return this.q((resolve, reject) => {\n            var aToken = this.getUAAToken();\n            aToken.then((response) => {\n                resolve();\n            });\n        });\n    }\n\n    MultiplePredixTimeSeriesQueries(pendingQueries) {\n        var deferred = this.q.defer();\n        var predixTSCalls = [];\n        angular.forEach(pendingQueries, (aQuery) => {\n            predixTSCalls.push(this.SinglePredixTimeSeriesQuery(aQuery));\n        });\n        this.q.all(predixTSCalls)\n            .then(\n            (results) => {\n                var response = {\n                    data: []\n                };\n                angular.forEach(results, (result) => {\n                    response.data.push(result);\n                });\n                deferred.resolve(response);\n            },\n            (errors) => {\n                deferred.reject(errors);\n            },\n            (updates) => {\n                deferred.update(updates);\n            }\n            );\n        return deferred.promise;\n    }\n\n    // Called once per panel (graph)\n    query(options) {\n        // not needed since we are using suggest vs value?\n        // it isn't used anyways..\n        //var query = this.buildQueryParameters(options);\n\n        var queries = [];\n        if (options.targets.length <= 0) {\n            return this.q.when({\n                data: []\n            });\n        }\n        if (typeof options.targets[0].metric === 'undefined') {\n            return this.q.when({\n                data: []\n            });\n        }\n        // the rest of this function is a promise\n        var deferred = this.q.defer();\n\n        // Iterate over each target and build our query, store inside\n        angular.forEach(options.targets, function (target) {\n            // there's no \"next\" option in here, so test and skip\n            if ((!target.hide) && (typeof target.metric !== 'undefined')) {\n                // placeholder while query is built\n                var aQuery = {\n                    \"start\": \"15s-ago\",\n                    \"end\": \"1s-ago\",\n                    \"tags\": [{\n                        \"name\": [\"placeholder\"]\n                    }]\n                };\n                aQuery.tags[0].name[0] = target.metric;\n                aQuery.tags[0].limit = options.maxDataPoints;\n                aQuery.start = options.range.from.valueOf();\n                aQuery.end = options.range.to.valueOf();\n                // now the filters\n                if (typeof target.attributes !== undefined) {\n                    // there are filters defined, loop through them\n                    var attributes = {};\n                    angular.forEach(target.attributes, function (attribute) {\n                        var name = attribute.name;\n                        var value = attribute.value;\n                        // if the value is empty, skip it\n                        if (value.length > 0) {\n                            //var aHash = {};\n                            //aHash[name] = value;\n                            //attribute_list.push(aHash);\n                            attributes[name] = value;\n                        }\n                    });\n                    if (attributes !== null) {\n                        // only add filters if some are defined\n                        aQuery.tags[0].filters = {};\n                        aQuery.tags[0].filters.attributes = attributes;\n                        console.log(aQuery);\n                    }\n                }\n                // Add the query and the target alias\n                // thhe alias will be used later for legend substitution if it is defined\n                queries.push({\n                    fullQuery: aQuery,\n                    targetAlias: target.alias\n                });\n            } else {\n                console.log(\"hidden or empty, not adding to query\");\n            }\n        });\n\n        // Check if there are any metrics to query (they can all be hidden, or none at all)\n        if (queries.length === 0) {\n            // console.log(\"no tags visible or specified, no data to fetch\");\n            deferred.resolve({\n                data: []\n            });\n            return deferred.promise;\n        }\n        this.fetchToken().then(() => {\n            var predixQueries = this.q.all({\n                first: this.MultiplePredixTimeSeriesQueries(queries),\n            });\n            predixQueries.then((results) => {\n                // return results from predix query\n                deferred.resolve(results.first);\n            });\n        });\n        return deferred.promise;\n    }\n\n    testDatasource() {\n        return this.fetchToken().then(() => {\n            return this.backendSrv.datasourceRequest({\n                url: this.tsURL + '/v1/tags',\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': this.uaaTokenCache.uaacToken,\n                    'Predix-Zone-Id': this.predixZoneId,\n                    'Access-Control-Allow-Origin': this.uaac_origin\n                }\n            }).then((response) => {\n                console.log(response);\n                if (response.status === 200) {\n                    return {\n                        status: \"success\",\n                        message: \"Data source is working\",\n                        title: \"Success\"\n                    };\n                }\n            });\n        });\n    }\n}\n"]}